--CREATING VIEW TO STORE DIMENSION GOLD LAYER DATA
CREATE OR REPLACE VIEW GOLD.DIM_CUSTOMERS AS
SELECT
        ROW_NUMBER() OVER (ORDER BY CU.CST_ID) AS CUSTOMER_KEY,
        CU.CST_ID AS CUSTOMER_ID,
        CU.CST_KEY AS CUSTOMER_NUMBER,
        CU.CST_FIRSTNAME AS FIRSTNAME,
        CU.CST_LASTNAME AS LASTNAME,
        CU.CST_MARITAL_STATUS AS MARITAL_STATUS,
        CASE WHEN CST_GNDR = 'N/A' THEN GEN
             WHEN CST_GNDR != GEN THEN CST_GNDR
             ELSE COALESCE(CST_GNDR, 'N/A')
        END AS GENDER,
        LA.CNTRY,
        CG.BDATE AS BIRTHDATE,
        CU.CST_CREATE_DATE AS CREATE_DATE
    FROM 
        SILVER.CRM_CUST_INFO CU
    LEFT 
        JOIN SILVER.ERP_CUST_AZ12 CG
    ON CU.CST_KEY = CG.CID
    LEFT 
        JOIN SILVER.ERP_LOC_A101 LA
    ON CU.CST_KEY = LA.CID
    ;
    
--CREATE VIEW FOR PRODUCTS
CREATE OR REPLACE VIEW GOLD.DIM_PRODUCTS AS
    SELECT
        ROW_NUMBER() OVER(ORDER BY PO.PRD_START_DT, PO.PRD_KEY) AS PRODUCT_KEY,
        PO.PRD_ID AS PRODUCT_ID,
        PO.PRD_KEY AS PRODUCT_NUMBER,
        PO.PRD_NM AS PRODUCT_NAME,
        CT.ID AS CATEGORY_ID,
        CT.CAT AS CATEGORY,
        CT.SUBCAT AS SUBCATEGORY,
        PO.PRD_COST AS PRODUCT_COST,
        PO.PRD_LINE AS  PRODUCT_LINE,
        PO.PRD_START_DT AS PRODUCT_START_DATE,
        CT.MAINTENANCE
    FROM 
        SILVER.CRM_PRD_INFO PO
    LEFT 
        JOIN SILVER.ERP_PX_CAT_G1V2 CT
    ON PO.CAT_ID = CT.ID
    WHERE PO.PRD_END_DT IS NULL; --FILTERING OUT HISTORICAL DATA


--CREATING VIEW FOR SALES DATA AND CORRESPONDING CUSTOMERS

CREATE OR REPLACE VIEW GOLD.FACT_SALES AS
SELECT 
    SLS_ORD_NUM,
    CU.CUSTOMER_KEY,
    SLS_ORDER_DT,
    SLS_SHIP_DT,
    SLS_DUE_DT,
    SLS_SALES,
    SLS_QUANTITY,
    SLS_PRICE
FROM 
SILVER.CRM_SALES_DETAILS SD
LEFT JOIN GOLD.DIM_CUSTOMERS CU
    ON SD.SLS_CUST_ID = CU.CUSTOMER_ID;

--View On GOLD Layer Views  
select * from GOLD.DIM_CUSTOMERS ;  
select * from GOLD.DIM_products;
select * from GOLD.fact_sales;
